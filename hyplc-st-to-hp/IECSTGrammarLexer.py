# Generated from IECSTGrammar.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,61,547,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
        11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,
        17,1,17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,
        21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,
        29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,
        32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,
        34,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,
        39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,
        45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,
        49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,
        51,3,51,422,8,51,1,52,1,52,1,53,1,53,3,53,428,8,53,1,54,4,54,431,
        8,54,11,54,12,54,432,1,55,1,55,1,55,1,55,1,55,3,55,440,8,55,1,56,
        1,56,1,57,1,57,3,57,446,8,57,1,58,4,58,449,8,58,11,58,12,58,450,
        1,59,1,59,5,59,455,8,59,10,59,12,59,458,9,59,1,60,4,60,461,8,60,
        11,60,12,60,462,1,61,1,61,1,62,1,62,3,62,469,8,62,1,63,4,63,472,
        8,63,11,63,12,63,473,1,64,1,64,1,64,1,64,1,64,1,64,3,64,482,8,64,
        1,65,1,65,1,66,1,66,3,66,488,8,66,1,67,4,67,491,8,67,11,67,12,67,
        492,1,68,1,68,3,68,497,8,68,1,68,3,68,500,8,68,1,69,1,69,1,69,1,
        70,1,70,3,70,507,8,70,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,
        74,1,74,5,74,519,8,74,10,74,12,74,522,9,74,1,75,4,75,525,8,75,11,
        75,12,75,526,1,75,1,75,1,76,1,76,1,76,1,76,1,76,5,76,536,8,76,10,
        76,12,76,539,9,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,537,0,78,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,0,107,0,109,0,111,53,113,
        0,115,0,117,0,119,54,121,55,123,0,125,0,127,0,129,56,131,0,133,0,
        135,0,137,57,139,0,141,0,143,0,145,0,147,0,149,58,151,59,153,60,
        155,61,1,0,11,1,0,48,49,1,0,48,55,1,0,48,57,2,0,48,57,95,95,3,0,
        48,57,65,70,97,102,2,0,69,69,101,101,2,0,80,80,112,112,2,0,43,43,
        45,45,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,
        13,32,32,549,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
        1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
        1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,111,1,0,0,0,0,119,1,0,0,0,
        0,121,1,0,0,0,0,129,1,0,0,0,0,137,1,0,0,0,0,149,1,0,0,0,0,151,1,
        0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,1,157,1,0,0,0,3,165,1,0,0,0,5,
        177,1,0,0,0,7,191,1,0,0,0,9,209,1,0,0,0,11,218,1,0,0,0,13,221,1,
        0,0,0,15,234,1,0,0,0,17,236,1,0,0,0,19,241,1,0,0,0,21,243,1,0,0,
        0,23,250,1,0,0,0,25,253,1,0,0,0,27,255,1,0,0,0,29,264,1,0,0,0,31,
        273,1,0,0,0,33,275,1,0,0,0,35,277,1,0,0,0,37,279,1,0,0,0,39,281,
        1,0,0,0,41,284,1,0,0,0,43,287,1,0,0,0,45,292,1,0,0,0,47,294,1,0,
        0,0,49,298,1,0,0,0,51,307,1,0,0,0,53,317,1,0,0,0,55,328,1,0,0,0,
        57,336,1,0,0,0,59,339,1,0,0,0,61,344,1,0,0,0,63,350,1,0,0,0,65,355,
        1,0,0,0,67,362,1,0,0,0,69,365,1,0,0,0,71,369,1,0,0,0,73,371,1,0,
        0,0,75,375,1,0,0,0,77,377,1,0,0,0,79,380,1,0,0,0,81,382,1,0,0,0,
        83,384,1,0,0,0,85,387,1,0,0,0,87,390,1,0,0,0,89,392,1,0,0,0,91,394,
        1,0,0,0,93,396,1,0,0,0,95,398,1,0,0,0,97,401,1,0,0,0,99,405,1,0,
        0,0,101,410,1,0,0,0,103,416,1,0,0,0,105,423,1,0,0,0,107,427,1,0,
        0,0,109,430,1,0,0,0,111,434,1,0,0,0,113,441,1,0,0,0,115,445,1,0,
        0,0,117,448,1,0,0,0,119,452,1,0,0,0,121,460,1,0,0,0,123,464,1,0,
        0,0,125,468,1,0,0,0,127,471,1,0,0,0,129,475,1,0,0,0,131,483,1,0,
        0,0,133,487,1,0,0,0,135,490,1,0,0,0,137,494,1,0,0,0,139,501,1,0,
        0,0,141,504,1,0,0,0,143,510,1,0,0,0,145,512,1,0,0,0,147,514,1,0,
        0,0,149,516,1,0,0,0,151,524,1,0,0,0,153,530,1,0,0,0,155,545,1,0,
        0,0,157,158,5,80,0,0,158,159,5,82,0,0,159,160,5,79,0,0,160,161,5,
        71,0,0,161,162,5,82,0,0,162,163,5,65,0,0,163,164,5,77,0,0,164,2,
        1,0,0,0,165,166,5,69,0,0,166,167,5,78,0,0,167,168,5,68,0,0,168,169,
        5,95,0,0,169,170,5,80,0,0,170,171,5,82,0,0,171,172,5,79,0,0,172,
        173,5,71,0,0,173,174,5,82,0,0,174,175,5,65,0,0,175,176,5,77,0,0,
        176,4,1,0,0,0,177,178,5,67,0,0,178,179,5,79,0,0,179,180,5,78,0,0,
        180,181,5,70,0,0,181,182,5,73,0,0,182,183,5,71,0,0,183,184,5,85,
        0,0,184,185,5,82,0,0,185,186,5,65,0,0,186,187,5,84,0,0,187,188,5,
        73,0,0,188,189,5,79,0,0,189,190,5,78,0,0,190,6,1,0,0,0,191,192,5,
        69,0,0,192,193,5,78,0,0,193,194,5,68,0,0,194,195,5,95,0,0,195,196,
        5,67,0,0,196,197,5,79,0,0,197,198,5,78,0,0,198,199,5,70,0,0,199,
        200,5,73,0,0,200,201,5,71,0,0,201,202,5,85,0,0,202,203,5,82,0,0,
        203,204,5,65,0,0,204,205,5,84,0,0,205,206,5,73,0,0,206,207,5,79,
        0,0,207,208,5,78,0,0,208,8,1,0,0,0,209,210,5,82,0,0,210,211,5,69,
        0,0,211,212,5,83,0,0,212,213,5,79,0,0,213,214,5,85,0,0,214,215,5,
        82,0,0,215,216,5,67,0,0,216,217,5,69,0,0,217,10,1,0,0,0,218,219,
        5,79,0,0,219,220,5,78,0,0,220,12,1,0,0,0,221,222,5,69,0,0,222,223,
        5,78,0,0,223,224,5,68,0,0,224,225,5,95,0,0,225,226,5,82,0,0,226,
        227,5,69,0,0,227,228,5,83,0,0,228,229,5,79,0,0,229,230,5,85,0,0,
        230,231,5,82,0,0,231,232,5,67,0,0,232,233,5,69,0,0,233,14,1,0,0,
        0,234,235,5,59,0,0,235,16,1,0,0,0,236,237,5,84,0,0,237,238,5,65,
        0,0,238,239,5,83,0,0,239,240,5,75,0,0,240,18,1,0,0,0,241,242,5,40,
        0,0,242,20,1,0,0,0,243,244,5,83,0,0,244,245,5,73,0,0,245,246,5,78,
        0,0,246,247,5,71,0,0,247,248,5,76,0,0,248,249,5,69,0,0,249,22,1,
        0,0,0,250,251,5,58,0,0,251,252,5,61,0,0,252,24,1,0,0,0,253,254,5,
        44,0,0,254,26,1,0,0,0,255,256,5,73,0,0,256,257,5,78,0,0,257,258,
        5,84,0,0,258,259,5,69,0,0,259,260,5,82,0,0,260,261,5,86,0,0,261,
        262,5,65,0,0,262,263,5,76,0,0,263,28,1,0,0,0,264,265,5,80,0,0,265,
        266,5,82,0,0,266,267,5,73,0,0,267,268,5,79,0,0,268,269,5,82,0,0,
        269,270,5,73,0,0,270,271,5,84,0,0,271,272,5,89,0,0,272,30,1,0,0,
        0,273,274,5,41,0,0,274,32,1,0,0,0,275,276,5,84,0,0,276,34,1,0,0,
        0,277,278,5,35,0,0,278,36,1,0,0,0,279,280,5,115,0,0,280,38,1,0,0,
        0,281,282,5,109,0,0,282,283,5,115,0,0,283,40,1,0,0,0,284,285,5,117,
        0,0,285,286,5,115,0,0,286,42,1,0,0,0,287,288,5,87,0,0,288,289,5,
        73,0,0,289,290,5,84,0,0,290,291,5,72,0,0,291,44,1,0,0,0,292,293,
        5,58,0,0,293,46,1,0,0,0,294,295,5,86,0,0,295,296,5,65,0,0,296,297,
        5,82,0,0,297,48,1,0,0,0,298,299,5,69,0,0,299,300,5,78,0,0,300,301,
        5,68,0,0,301,302,5,95,0,0,302,303,5,84,0,0,303,304,5,89,0,0,304,
        305,5,80,0,0,305,306,5,69,0,0,306,50,1,0,0,0,307,308,5,86,0,0,308,
        309,5,65,0,0,309,310,5,82,0,0,310,311,5,95,0,0,311,312,5,73,0,0,
        312,313,5,78,0,0,313,314,5,80,0,0,314,315,5,85,0,0,315,316,5,84,
        0,0,316,52,1,0,0,0,317,318,5,86,0,0,318,319,5,65,0,0,319,320,5,82,
        0,0,320,321,5,95,0,0,321,322,5,79,0,0,322,323,5,85,0,0,323,324,5,
        84,0,0,324,325,5,80,0,0,325,326,5,85,0,0,326,327,5,84,0,0,327,54,
        1,0,0,0,328,329,5,69,0,0,329,330,5,78,0,0,330,331,5,68,0,0,331,332,
        5,95,0,0,332,333,5,86,0,0,333,334,5,65,0,0,334,335,5,82,0,0,335,
        56,1,0,0,0,336,337,5,73,0,0,337,338,5,70,0,0,338,58,1,0,0,0,339,
        340,5,84,0,0,340,341,5,72,0,0,341,342,5,69,0,0,342,343,5,78,0,0,
        343,60,1,0,0,0,344,345,5,69,0,0,345,346,5,76,0,0,346,347,5,83,0,
        0,347,348,5,73,0,0,348,349,5,70,0,0,349,62,1,0,0,0,350,351,5,69,
        0,0,351,352,5,76,0,0,352,353,5,83,0,0,353,354,5,69,0,0,354,64,1,
        0,0,0,355,356,5,69,0,0,356,357,5,78,0,0,357,358,5,68,0,0,358,359,
        5,95,0,0,359,360,5,73,0,0,360,361,5,70,0,0,361,66,1,0,0,0,362,363,
        5,79,0,0,363,364,5,82,0,0,364,68,1,0,0,0,365,366,5,88,0,0,366,367,
        5,79,0,0,367,368,5,82,0,0,368,70,1,0,0,0,369,370,5,38,0,0,370,72,
        1,0,0,0,371,372,5,65,0,0,372,373,5,78,0,0,373,374,5,68,0,0,374,74,
        1,0,0,0,375,376,5,61,0,0,376,76,1,0,0,0,377,378,5,60,0,0,378,379,
        5,62,0,0,379,78,1,0,0,0,380,381,5,60,0,0,381,80,1,0,0,0,382,383,
        5,62,0,0,383,82,1,0,0,0,384,385,5,60,0,0,385,386,5,61,0,0,386,84,
        1,0,0,0,387,388,5,62,0,0,388,389,5,61,0,0,389,86,1,0,0,0,390,391,
        5,43,0,0,391,88,1,0,0,0,392,393,5,45,0,0,393,90,1,0,0,0,394,395,
        5,42,0,0,395,92,1,0,0,0,396,397,5,47,0,0,397,94,1,0,0,0,398,399,
        5,42,0,0,399,400,5,42,0,0,400,96,1,0,0,0,401,402,5,78,0,0,402,403,
        5,79,0,0,403,404,5,84,0,0,404,98,1,0,0,0,405,406,5,84,0,0,406,407,
        5,82,0,0,407,408,5,85,0,0,408,409,5,69,0,0,409,100,1,0,0,0,410,411,
        5,70,0,0,411,412,5,65,0,0,412,413,5,76,0,0,413,414,5,83,0,0,414,
        415,5,69,0,0,415,102,1,0,0,0,416,417,5,50,0,0,417,418,5,35,0,0,418,
        419,1,0,0,0,419,421,3,105,52,0,420,422,3,109,54,0,421,420,1,0,0,
        0,421,422,1,0,0,0,422,104,1,0,0,0,423,424,7,0,0,0,424,106,1,0,0,
        0,425,428,3,105,52,0,426,428,5,95,0,0,427,425,1,0,0,0,427,426,1,
        0,0,0,428,108,1,0,0,0,429,431,3,107,53,0,430,429,1,0,0,0,431,432,
        1,0,0,0,432,430,1,0,0,0,432,433,1,0,0,0,433,110,1,0,0,0,434,435,
        5,56,0,0,435,436,5,35,0,0,436,437,1,0,0,0,437,439,3,113,56,0,438,
        440,3,117,58,0,439,438,1,0,0,0,439,440,1,0,0,0,440,112,1,0,0,0,441,
        442,7,1,0,0,442,114,1,0,0,0,443,446,3,113,56,0,444,446,5,95,0,0,
        445,443,1,0,0,0,445,444,1,0,0,0,446,116,1,0,0,0,447,449,3,115,57,
        0,448,447,1,0,0,0,449,450,1,0,0,0,450,448,1,0,0,0,450,451,1,0,0,
        0,451,118,1,0,0,0,452,456,7,2,0,0,453,455,7,3,0,0,454,453,1,0,0,
        0,455,458,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,120,1,0,0,
        0,458,456,1,0,0,0,459,461,7,2,0,0,460,459,1,0,0,0,461,462,1,0,0,
        0,462,460,1,0,0,0,462,463,1,0,0,0,463,122,1,0,0,0,464,465,7,2,0,
        0,465,124,1,0,0,0,466,469,3,123,61,0,467,469,5,95,0,0,468,466,1,
        0,0,0,468,467,1,0,0,0,469,126,1,0,0,0,470,472,3,125,62,0,471,470,
        1,0,0,0,472,473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,128,
        1,0,0,0,475,476,5,49,0,0,476,477,5,54,0,0,477,478,5,35,0,0,478,479,
        1,0,0,0,479,481,3,131,65,0,480,482,3,135,67,0,481,480,1,0,0,0,481,
        482,1,0,0,0,482,130,1,0,0,0,483,484,7,4,0,0,484,132,1,0,0,0,485,
        488,3,131,65,0,486,488,5,95,0,0,487,485,1,0,0,0,487,486,1,0,0,0,
        488,134,1,0,0,0,489,491,3,133,66,0,490,489,1,0,0,0,491,492,1,0,0,
        0,492,490,1,0,0,0,492,493,1,0,0,0,493,136,1,0,0,0,494,496,3,119,
        59,0,495,497,3,139,69,0,496,495,1,0,0,0,496,497,1,0,0,0,497,499,
        1,0,0,0,498,500,3,141,70,0,499,498,1,0,0,0,499,500,1,0,0,0,500,138,
        1,0,0,0,501,502,5,46,0,0,502,503,3,119,59,0,503,140,1,0,0,0,504,
        506,3,143,71,0,505,507,3,147,73,0,506,505,1,0,0,0,506,507,1,0,0,
        0,507,508,1,0,0,0,508,509,3,119,59,0,509,142,1,0,0,0,510,511,7,5,
        0,0,511,144,1,0,0,0,512,513,7,6,0,0,513,146,1,0,0,0,514,515,7,7,
        0,0,515,148,1,0,0,0,516,520,7,8,0,0,517,519,7,9,0,0,518,517,1,0,
        0,0,519,522,1,0,0,0,520,518,1,0,0,0,520,521,1,0,0,0,521,150,1,0,
        0,0,522,520,1,0,0,0,523,525,7,10,0,0,524,523,1,0,0,0,525,526,1,0,
        0,0,526,524,1,0,0,0,526,527,1,0,0,0,527,528,1,0,0,0,528,529,6,75,
        0,0,529,152,1,0,0,0,530,531,5,40,0,0,531,532,5,42,0,0,532,537,1,
        0,0,0,533,536,3,153,76,0,534,536,9,0,0,0,535,533,1,0,0,0,535,534,
        1,0,0,0,536,539,1,0,0,0,537,538,1,0,0,0,537,535,1,0,0,0,538,540,
        1,0,0,0,539,537,1,0,0,0,540,541,5,42,0,0,541,542,5,41,0,0,542,543,
        1,0,0,0,543,544,6,76,0,0,544,154,1,0,0,0,545,546,9,0,0,0,546,156,
        1,0,0,0,21,0,421,427,432,439,445,450,456,462,468,473,481,487,492,
        496,499,506,520,526,535,537,1,0,1,0
    ]

class IECSTGrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    Binary_literal = 52
    Octal_literal = 53
    Decimal_literal = 54
    Pure_decimal_digits = 55
    Hexadecimal_literal = 56
    Floating_point_literal = 57
    ID = 58
    WS = 59
    Block_comment = 60
    ANY = 61

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'PROGRAM'", "'END_PROGRAM'", "'CONFIGURATION'", "'END_CONFIGURATION'", 
            "'RESOURCE'", "'ON'", "'END_RESOURCE'", "';'", "'TASK'", "'('", 
            "'SINGLE'", "':='", "','", "'INTERVAL'", "'PRIORITY'", "')'", 
            "'T'", "'#'", "'s'", "'ms'", "'us'", "'WITH'", "':'", "'VAR'", 
            "'END_TYPE'", "'VAR_INPUT'", "'VAR_OUTPUT'", "'END_VAR'", "'IF'", 
            "'THEN'", "'ELSIF'", "'ELSE'", "'END_IF'", "'OR'", "'XOR'", 
            "'&'", "'AND'", "'='", "'<>'", "'<'", "'>'", "'<='", "'>='", 
            "'+'", "'-'", "'*'", "'/'", "'**'", "'NOT'", "'TRUE'", "'FALSE'" ]

    symbolicNames = [ "<INVALID>",
            "Binary_literal", "Octal_literal", "Decimal_literal", "Pure_decimal_digits", 
            "Hexadecimal_literal", "Floating_point_literal", "ID", "WS", 
            "Block_comment", "ANY" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "Binary_literal", "Binary_digit", "Binary_literal_character", 
                  "Binary_literal_characters", "Octal_literal", "Octal_digit", 
                  "Octal_literal_character", "Octal_literal_characters", 
                  "Decimal_literal", "Pure_decimal_digits", "Decimal_digit", 
                  "Decimal_literal_character", "Decimal_literal_characters", 
                  "Hexadecimal_literal", "Hexadecimal_digit", "Hexadecimal_literal_character", 
                  "Hexadecimal_literal_characters", "Floating_point_literal", 
                  "Decimal_fraction", "Decimal_exponent", "Floating_point_e", 
                  "Floating_point_p", "Sign", "ID", "WS", "Block_comment", 
                  "ANY" ]

    grammarFileName = "IECSTGrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


